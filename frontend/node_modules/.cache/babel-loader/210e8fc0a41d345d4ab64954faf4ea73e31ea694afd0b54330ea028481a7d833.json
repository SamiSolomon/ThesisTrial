{"ast":null,"code":"var _jsxFileName = \"C:\\\\sami\\\\frontend\\\\src\\\\routes\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Login.css'; // Update the CSS file name if needed\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalMessage, setModalMessage] = useState('');\n  const {\n    username,\n    password\n  } = formData;\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:8000/api/login/', formData);\n      console.log(response.data);\n      setModalMessage('Login successful!');\n      setIsModalOpen(true);\n      // Optionally, save the token in local storage\n      localStorage.setItem('token', response.data.token);\n    } catch (error) {\n      console.error(error.response.data);\n      setModalMessage('Login failed. Please check your credentials.');\n      setIsModalOpen(true);\n    }\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login to Your Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"username-label\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username-input\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"username\",\n              value: username,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"password-label\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: password,\n            onChange: handleChange,\n            minLength: \"6\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#register\",\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"forget password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      message: modalMessage,\n      onClose: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"gea6Hc3EBzdmDX6tREDXXWB9sbY=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","Modal","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","username","password","isModalOpen","setIsModalOpen","modalMessage","setModalMessage","handleChange","e","target","name","value","handleSubmit","preventDefault","response","post","console","log","data","localStorage","setItem","token","error","handleCloseModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","minLength","href","message","onClose","_c","$RefreshReg$"],"sources":["C:/sami/frontend/src/routes/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Login.css'; // Update the CSS file name if needed\r\nimport Modal from './Modal';\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    password: ''\r\n  });\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalMessage, setModalMessage] = useState('');\r\n\r\n  const { username, password } = formData;\r\n\r\n  const handleChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/api/login/', formData);\r\n      console.log(response.data);\r\n      setModalMessage('Login successful!');\r\n      setIsModalOpen(true);\r\n      // Optionally, save the token in local storage\r\n      localStorage.setItem('token', response.data.token);\r\n    } catch (error) {\r\n      console.error(error.response.data);\r\n      setModalMessage('Login failed. Please check your credentials.');\r\n      setIsModalOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className='login-page'>\r\n      <div className='login-container'>\r\n        <h1>Login to Your Account</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <label className='username-label'>Username:</label>\r\n            <div className='username-input'>\r\n              <input \r\n                type=\"text\"\r\n                name=\"username\"\r\n                value={username}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label className='password-label'>Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={handleChange}\r\n              minLength=\"6\"\r\n              required\r\n            />\r\n          </div>\r\n          <a href='#register'><h6>forget password?</h6></a>\r\n          <button type=\"submit\">Login</button>\r\n        </form>\r\n      </div>\r\n      {isModalOpen && (\r\n        <Modal message={modalMessage} onClose={handleCloseModal} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}