{"ast":null,"code":"var _jsxFileName = \"C:\\\\sami\\\\frontend\\\\src\\\\routes\\\\NearbyHospital.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NearbyHospitals = () => {\n  _s();\n  const [hospitals, setHospitals] = useState([]);\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n\n  // Get user's current location\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      setLatitude(9.0079232);\n      setLongitude(position.coords.longitude);\n    }, error => {\n      console.error('Error getting location:', error);\n    });\n  }, []);\n\n  // Fetch hospitals based on user's location\n  useEffect(() => {\n    const fetchHospitals = async () => {\n      console.log(latitude);\n      console.log(longitude);\n      if (latitude !== null && longitude !== null) {\n        try {\n          const response = await axios.get('/api/nearbyhospitals', {\n            params: {\n              latitude,\n              longitude\n            }\n          });\n          setHospitals(response.data.hospitals);\n        } catch (error) {\n          console.error('Error fetching nearby hospitals:', error);\n        }\n      }\n    };\n    fetchHospitals();\n  }, [latitude, longitude]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Nearby Hospitals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), hospitals.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-4\",\n      children: hospitals.map((hospital, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"p-4 border border-gray-200 rounded-lg shadow-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold\",\n          children: hospital.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: hospital.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-800\",\n          children: [\"Distance: \", hospital.distance.toFixed(2), \" km\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500\",\n      children: \"Loading hospitals...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(NearbyHospitals, \"lZFG9zKg3lAkq0LJSudJtdEluRg=\");\n_c = NearbyHospitals;\nexport default NearbyHospitals;\nvar _c;\n$RefreshReg$(_c, \"NearbyHospitals\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","NearbyHospitals","_s","hospitals","setHospitals","latitude","setLatitude","longitude","setLongitude","navigator","geolocation","getCurrentPosition","position","coords","error","console","fetchHospitals","log","response","get","params","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","hospital","index","name","location","distance","toFixed","_c","$RefreshReg$"],"sources":["C:/sami/frontend/src/routes/NearbyHospital.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst NearbyHospitals = () => {\r\n  const [hospitals, setHospitals] = useState([]);\r\n  const [latitude, setLatitude] = useState(null);\r\n  const [longitude, setLongitude] = useState(null);\r\n\r\n  // Get user's current location\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        setLatitude(9.0079232);\r\n        setLongitude(position.coords.longitude);\r\n      },\r\n      (error) => {\r\n        console.error('Error getting location:', error);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  // Fetch hospitals based on user's location\r\n  useEffect(() => {\r\n    const fetchHospitals = async () => {\r\n      console.log(latitude)\r\n      console.log(longitude)\r\n      if (latitude !== null && longitude !== null) {\r\n        try {\r\n          const response = await axios.get('/api/nearbyhospitals', {\r\n            params: { latitude, longitude },\r\n          });\r\n          setHospitals(response.data.hospitals);\r\n        } catch (error) {\r\n          console.error('Error fetching nearby hospitals:', error);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchHospitals();\r\n  }, [latitude, longitude]);\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Nearby Hospitals</h1>\r\n      {hospitals.length > 0 ? (\r\n        <ul className=\"space-y-4\">\r\n          {hospitals.map((hospital, index) => (\r\n            <li key={index} className=\"p-4 border border-gray-200 rounded-lg shadow-sm\">\r\n              <h2 className=\"text-xl font-semibold\">{hospital.name}</h2>\r\n              <p className=\"text-gray-600\">{hospital.location}</p>\r\n              <p className=\"text-gray-800\">Distance: {hospital.distance.toFixed(2)} km</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p className=\"text-gray-500\">Loading hospitals...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NearbyHospitals;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}