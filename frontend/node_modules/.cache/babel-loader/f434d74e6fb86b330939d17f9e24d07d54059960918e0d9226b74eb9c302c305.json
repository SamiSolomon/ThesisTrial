{"ast":null,"code":"var _jsxFileName = \"C:\\\\sami\\\\frontend\\\\src\\\\routes\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Register.css';\nimport axios from 'axios';\nimport Modal from '.';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalMessage, setModalMessage] = useState('');\n  const {\n    username,\n    email,\n    password,\n    confirmPassword\n  } = formData;\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:8000/api/register/', formData);\n      setModalMessage(t('register.successMessage'));\n      setIsModalOpen(true);\n      console.log(response.data);\n      // Reset form fields\n      setFormData({\n        username: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      });\n    } catch (error) {\n      setModalMessage(t('register.errorMessage'));\n      setIsModalOpen(true);\n      console.error(error.response.data);\n    }\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: t('register.title')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [t('register.username'), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"username\",\n              value: username,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [t('register.email'), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              value: email,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [t('register.password'), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              value: password,\n              onChange: handleChange,\n              minLength: \"6\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [t('register.confirmPassword'), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"confirmPassword\",\n              value: confirmPassword,\n              onChange: handleChange,\n              minLength: \"6\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: t('register.registerButton')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      message: modalMessage,\n      onClose: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"wd8ySeutS8AA3HVqiuInxVeg6dE=\", false, function () {\n  return [useTranslation];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","Modal","useTranslation","jsxDEV","_jsxDEV","Register","_s","t","formData","setFormData","username","email","password","confirmPassword","isModalOpen","setIsModalOpen","modalMessage","setModalMessage","handleChange","e","target","name","value","handleSubmit","preventDefault","response","post","console","log","data","error","handleCloseModal","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","minLength","message","onClose","_c","$RefreshReg$"],"sources":["C:/sami/frontend/src/routes/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Register.css';\r\nimport axios from 'axios';\r\nimport Modal from '.';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Register = () => {\r\n  const { t } = useTranslation();\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalMessage, setModalMessage] = useState('');\r\n\r\n  const { username, email, password, confirmPassword } = formData;\r\n\r\n  const handleChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/api/register/', formData);\r\n      setModalMessage(t('register.successMessage'));\r\n      setIsModalOpen(true);\r\n      console.log(response.data);\r\n      // Reset form fields\r\n      setFormData({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      });\r\n    } catch (error) {\r\n      setModalMessage(t('register.errorMessage'));\r\n      setIsModalOpen(true);\r\n      console.error(error.response.data);\r\n    }\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='register-page'>\r\n        <div className='register-container'>\r\n          <h2>{t('register.title')}</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className='username-input'>\r\n              <label>{t('register.username')}:</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                value={username}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label>{t('register.email')}:</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label>{t('register.password')}:</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={handleChange}\r\n                minLength=\"6\"\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label>{t('register.confirmPassword')}:</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n                value={confirmPassword}\r\n                onChange={handleChange}\r\n                minLength=\"6\"\r\n                required\r\n              />\r\n            </div>\r\n            <button type=\"submit\">{t('register.registerButton')}</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      {isModalOpen && (\r\n        <Modal message={modalMessage} onClose={handleCloseModal} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}